name: 'Dev Pipeline'

on:
  workflow_dispatch:
  push:
    branches:
      - dev
  pull_request:

env:
  SERVER: dev

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          IMAGE_TAG: ${{github.sha}}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: deploy to cluster
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}

      - name: Render Deployment YAML
        uses: nowactions/envsubst@v1
        with:
          input: ./.github/k8s/k8s.yaml.tmpl
          output: ./.github/k8s/k8s.yaml
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          APP_NAME: ${{ github.event.repository.name }}
          IMAGE_TAG: ${{ github.sha }}

      - name: run kubectl
        run: kubectl apply -f .github/k8s/k8s.yaml
